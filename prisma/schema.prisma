// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



 


 model User {
   id             Int       @id @default(autoincrement())
   firstName           String
   secondName           String
   hashedPassword String
   email          String    @unique
   registrationNumber String @unique
   userType       UserType
   createdAt      DateTime @default(now())
   updatedAt      DateTime @default(now())
   school         School?
   projects       Project[]
 }
model Project {
  projectId      Int      @id @default(autoincrement())
  title          String
  createdAt      DateTime @default(now())
  ans1           String
  ans2           String
  ans3           String
  ans4           String
  school         School
  status         ProjectStatus @default(PENDING)
  userId         Int
  user           User      @relation(fields: [userId], references: [id])
  updatedBy      String? 
  comment         String?          
}
 enum UserType {
   ADMIN
   STUDENT
   SUPERADMIN
 }
 enum School {
   SONAS
   SASS
   SCI
   MEDICINE
   ENGENEERING
   LAW
 }

 enum ProjectStatus {
   PENDING
   ACCEPTED
   REJECTED
 }


// Exam Bank Model

// model Exam {
//   examId          Int       @id @default(autoincrement())
//   examTitle       String
//   examSubject     String
//   examCategory    ExamCategory
//   examFile        String    // Assuming you store the file path or use a storage solution
//   markingScheme   String    // Similarly, store the path or use a storage solution
//   creator         User      @relation(fields: [createdById], references: [userId])
//   createdById     Int
// }

// enum ExamCategory {
//   KCSE
//   Predictions
//   Normal
// }


// model User {
//   userId             Int       @id @default(autoincrement())
//   userName           String
//   registrationNumber String    @unique
//   userType           UserType
//   userExams          Exam[]    @relation("UserExams", references: [examId])
//   userCreatedExams   Exam[]    @relation("UserCreatedExams", references: [createdById])
// }

// enum UserType {
//   Admin
//   Student
//   SuperAdmin
// }
